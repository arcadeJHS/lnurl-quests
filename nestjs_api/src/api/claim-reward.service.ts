import { Query, Inject } from '@nestjs/common';
// import { AmountValidator } from '../lnurl/validators/amount.validator';
import { CreateWithdrawDto } from '../lnurl/dto/withdraw.dto';
import { Injectable } from '@nestjs/common';
import { LnbitsLightningService } from '../lnurl/services/lnbits-lightning.service';
import { LNBitsGenerateWithdrawUrlResponse } from '../lnurl/interfaces/withdraw.interface';
import { ClaimService } from '../claim/claim.service';
import { QuestsService } from '../quests/quests.service';

@Injectable()
export class ClaimRewardService {
  constructor(
    // private readonly amountValidator: AmountValidator,
    @Inject('LightningService')
    private readonly lightningService: LnbitsLightningService,
    private readonly claimService: ClaimService,
    private readonly questService: QuestsService,
  ) {}

  async generateWithdrawUrl(
    @Query() createWithdrawDto: CreateWithdrawDto,
  ): Promise<LNBitsGenerateWithdrawUrlResponse> {
    // TODO: move this logic to the quest creation logic
    // this.amountValidator.validate(
    //   createWithdrawDto.minAmount,
    //   createWithdrawDto.maxAmount,
    // );s

    /**
     * 1. createWithdrawDto.token is the claimId generated by validating a solution against a quest.
     * 2. With that token we can get the claim document from the DB.
     * 3. A claim contains a questId, which we can use to get the quest document from the DB.
     * 4. The quest contains the following fields:
     * - rewardAmount: we can use this to set the minWithdrawable and maxWithdrawable fields in the LNURL.
     * - title: we can use this to set the defaultDescription field in the LNURL, for instance `Claim your reward for completing the quest: ${title}`.
     *
     * 2. We have succesfully validated the scenario submitted by the user against the quest's conditions.
     */

    /**
     * This method generates a withdraw URL similar to:
     * "http://localhost:3000/generateWithdrawParams?q=fde2c82bdc78ff7eda48de478a9412d785fa988cc1f16c8e89c0a82af138168b"
     *
     * Here, the "q" param is the "lnurl.secret" that will be used to uniquely identify the withdraw in subsequent operations.
     * TODO: add the withdraw request params to DB, using the param "lnurl.secret" as UUID to identify it in subsequent operations
     * TODO: params to add to withdraws DB: secret (as ID), minWithdrawable, maxWithdrawable, defaultDescription
     */
    const claimId = createWithdrawDto.token;
    // get claim document from DB by claimId
    const claim = await this.claimService.findOne(claimId);
    // get quest document from DB by claim.questId
    const quest = await this.questService.findOne(claim.questId);

    const lnurl = await this.lightningService.generateWithdrawUrl({
      minWithdrawable: quest.rewardAmount,
      maxWithdrawable: quest.rewardAmount,
      defaultDescription: `Reward for ${quest.title}`,
    });

    return lnurl;
  }
}
